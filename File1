
import pandas as pd
from pandas import Series, DataFrame

titanic_df=pd.read_csv('train.csv')

titanic_df.head()

titanic_df.info()

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
%matplotlib inline

sns.catplot(x='Sex', data=titanic_df, kind='count')

sns.catplot(x='Sex', data=titanic_df, hue='Pclass')

sns.countplot(x='Sex', hue='Pclass', data=titanic_df)

sns.countplot(x='Pclass', hue='Sex', data=titanic_df)

def male_female_child(passenger):
    age,sex=passenger
    if age < 16:
        return 'child'
    else:
        return sex

titanic_df['person']=titanic_df[['Age','Sex']].apply(male_female_child,axis=1)

titanic_df[0:10]

sns.countplot(x='Pclass', hue='person', data=titanic_df)

titanic_df['Age'].hist(bins=70)

titanic_df['Age'].mean()

titanic_df['person'].value_counts()

fig = sns.FacetGrid(titanic_df,hue='Sex',aspect=4)
fig.map(sns.kdeplot,'Age',shade=True)
oldest=titanic_df['Age'].max()
fig.set(xlim=(0,oldest))
fig.add_legend()

fig = sns.FacetGrid(titanic_df,hue='person',aspect=4)
fig.map(sns.kdeplot,'Age',shade=True)
oldest=titanic_df['Age'].max()
fig.set(xlim=(0,oldest))
fig.add_legend()

fig = sns.FacetGrid(titanic_df,hue='Pclass',aspect=4)
fig.map(sns.kdeplot,'Age',shade=True)
oldest=titanic_df['Age'].max()
fig.set(xlim=(0,oldest))
fig.add_legend()

titanic_df.head()

deck= titanic_df['Cabin'].dropna()

deck.head()

levels=[]

for level in deck:
    levels.append(level[0])
    
cabin_df = DataFrame(levels)
cabin_df.columns=['Cabin']
sns.countplot(x='Cabin',data=cabin_df,palette='winter_d')

cabin_df=cabin_df[cabin_df.Cabin!='T']
sns.countplot(x='Cabin',data=cabin_df,palette='summer')

titanic_df.head()

sns.countplot(x='Embarked',data=cabin_df,hue='Pclass',order=['C','Q','S'])



sns.countplot(x='Embarked', data=titanic_df, hue='Pclass', order=['C', 'Q', 'S'])


titanic_df.head()

titanic_df['Alone']=titanic_df.SibSp+titanic_df.Parch

titanic_df['Alone']

titanic_df['Alone'].loc[titanic_df['Alone']>0]='with family'
titanic_df['Alone'].loc[titanic_df['Alone']==0]='Alone'

titanic_df.head()

sns.countplot(x='Alone', data=titanic_df,palette='Blues')

titanic_df["Survivor"] = titanic_df.Survived.map({0: "no", 1: "yes"})
sns.countplot(x='Survivor',data=titanic_df,palette='Set1')

sns.countplot('Pclass','Survived',data=titanic_df)

sns.countplot(x='Pclass', hue='Survived', data=titanic_df)

sns.catplot(x='Pclass', y='Survived', data=titanic_df)


sns.lineplot(x='Pclass', y='Survived',data=titanic_df)

sns.lineplot(x='Pclass', y='Survived', hue='person',data=titanic_df)

sns.lmplot('Age','Survived',data=titanic_df)

sns.lmplot(x='Age', y='Survived', data=titanic_df)

sns.lmplot(x='Age',y='Survived',hue='Pclass',data=titanic_df,palette='winter')

generations=[10,20,40,60,80]
sns.lmplot(x='Age',y='Survived',hue='Pclass',data=titanic_df,palette='winter',x_bins=generations)

sns.lmplot(x='Age',y='Survived',hue='Sex',data=titanic_df,palette='winter',x_bins=generations)

sns.lmplot(x='Age',y='Survived',hue='Embarked',data=titanic_df,palette='winter',x_bins=generations)

sns.lmplot(x='Age',y='Survived',hue='Pclass',data=titanic_df,palette='winter')

generations=[10,20,40,60,80]
sns.lmplot(x='Age',y='Survived',hue='Pclass',data=titanic_df,palette='winter',x_bins=generations)

sns.lmplot(x='Age',y='Survived',hue='Sex',data=titanic_df,palette='winter',x_bins=generations)

sns.lmplot(x='Age',y='Survived',hue='Embarked',data=titanic_df,palette='winter',x_bins=generations)
